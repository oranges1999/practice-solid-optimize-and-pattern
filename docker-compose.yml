services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            - '6001:6001'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - redis
            - meilisearch
            - minio
            - mailpit
            - mysql
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
        volumes:
            - 'sail-minio:/data'
        networks:
            - sail
        command: 'minio server /data --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - mc
                - ready
                - local
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    phpmyadmin:
        image: 'phpmyadmin/phpmyadmin:latest'
        restart: always
        ports:
            - '8080:80'
        environment:
            - 'PMA_HOST=${DB_HOST}'
            - 'PMA_USER=${DB_USERNAME}'
            - 'PMA_PASSWORD=${DB_PASSWORD}'
        networks:
            - sail
    sonarqube:
        image: 'sonarqube:latest'
        healthcheck:
            test:
                - CMD
                - curl
                - '-f'
                - 'http://localhost:9000'
            interval: 10s
            timeout: 5s
            retries: 10
        depends_on:
            db:
                condition: service_healthy
        environment:
            SONAR_JDBC_URL: 'jdbc:postgresql://db:5432/sonar'
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar
        volumes:
            - 'sonarqube_data:/opt/sonarqube/data'
            - 'sonarqube_extensions:/opt/sonarqube/extensions'
            - 'sonarqube_logs:/opt/sonarqube/logs'
            - 'sonarqube_temp:/opt/sonarqube/temp'
        ports:
            - '9090:9000'
        networks:
            - sail
    sonar-scanner:
        image: sonarsource/sonar-scanner-cli
        environment:
            SONAR_TOKEN: '${SONAR_TOKEN}'
            SONAR_HOST_URL: '${SONAR_HOST_URL}'
            SONAR_SCANNER_OPTS: "-Dsonar.projectKey=${SONAR_PROJECT_KEY}\n"
        networks:
            - sail
        depends_on:
            sonarqube:
                condition: service_healthy
        volumes:
            - './:/usr/src'
    db:
        image: 'postgres:latest'
        healthcheck:
            test:
                - CMD-SHELL
                - pg_isready
            interval: 10s
            timeout: 5s
            retries: 5
        hostname: postgresql
        environment:
            PGUSER: sonar
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
            POSTGRES_DB: sonar
        volumes:
            - 'postgresql:/var/lib/postgresql'
            - 'postgresql_data:/var/lib/postgresql/data'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
    sail-minio:
        driver: local
    sail-mysql:
        driver: local
    sonarqube_data:
        driver: local
    sonarqube_temp:
        driver: local
    sonarqube_extensions:
        driver: local
    sonarqube_logs:
        driver: local
    postgresql:
        driver: local
    postgresql_data:
        driver: local
    sonarqube_bundled-plugins:
        driver: local
